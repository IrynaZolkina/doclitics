"use client";
import { Geist, Geist_Mono, Inter, Roboto } from "next/font/google";
import "./globals.css";

import { ReduxProvider } from "../redux/Providers";
import Footer from "@/components/Footer";
import Header from "@/components/Header";
// import ToastContainer from "@/components-ui/ToastContainer";
import { useEffect, useState } from "react";
import { usePathname } from "next/navigation";
import ToastManual from "@/components-ui/ToastManual";
import ToastSuper from "@/components-ui/ToastSuper";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
});

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const pathname = usePathname();
  const [displayChildren, setDisplayChildren] = useState(children);
  const [fade, setFade] = useState(true);

  // useEffect(() => {
  //   setFade(false); // fade out
  //   const timeout = setTimeout(() => {
  //     setDisplayChildren(children); // swap page
  //     setFade(true); // fade in new page
  //   }, 200); // duration matches CSS

  //   return () => clearTimeout(timeout);
  // }, [pathname, children]);
  return (
    <html lang="en" className="test">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${
          inter.variable
        } ${roboto.variable} page-transition ${fade ? "fade-in" : "fade-out"}`}
      >
        <ReduxProvider>
          <div className="page-wrapper">
            <Header />
            {displayChildren}
            <Footer />
            {/* <ToastContainer /> */}
            <ToastManual />
            <ToastSuper />
          </div>
        </ReduxProvider>
      </body>
    </html>
  );
}
